- include_tasks: main-{{ansible_distribution|lower}}.yml

- file:
    path: "{{item}}"
    state: directory
  become: true
  with_items:
    - /etc/acme/certs
    - /etc/acme/config
    - /etc/acme/renew.d

- copy:
    dest: /etc/acme/renew-hook
    content: |
        #!/bin/sh
        echo $* >> /tmp/acme-sh-renew-hook-arguments

        chmod g=,o= /etc/acme/certs/*/*.key
        run-parts /etc/acme/renew.d

    mode: u=rwx,g=rx,o=
  become: true

- git:
    dest: /opt/acme.sh
    repo: https://github.com/acmesh-official/acme.sh
    depth: 1
    recursive: yes
    force: yes
  become: true

- copy:
    dest: /etc/cron.daily/renew-ssl-certificates
    content: |
        #!/bin/sh
        /bin/sh /opt/acme.sh/acme.sh --cron
        --home /etc/acme --cert-home /etc/acme/certs
        --config-home /etc/acme/config

    mode: u=rwx,g=rx,o=
  become: true


- command:
    cmd: >
        /bin/sh /opt/acme.sh/acme.sh
        --log --debug
        --home /etc/acme --cert-home /etc/acme/certs
        --config-home /etc/acme/config
        --renew-hook /etc/acme/renew-hook
        --issue --dns {{managed_domains[managed_domain].acme_provider}}
        --dnssleep 300
        {% for domain in domains -%} -d '{{domain}}' {% endfor %}
        --email {{managed_domains[managed_domain].soa_email}}

    #--test
    creates: /etc/acme/certs/{{cert_name}}/{{cert_name}}.conf
  become: true
  environment: "{{managed_domains[managed_domain].environment}}"


#- file:
#    path: /root/bin
#    state: directory
#  become: true
#
#
#- template:
#    src: "{{provider}}-dns-auth.j2"
#    dest: /root/bin/certbot-{{provider}}-dns-auth
#    mode: u=rwx,g=rx,o=
#  become: true
#
#- template:
#    src: "{{provider}}-dns-cleanup.j2"
#    dest: /root/bin/certbot-{{provider}}-dns-cleanup
#    mode: u=rwx,g=rx,o=
#  become: true
#
#- template:
#    src: create_letsencrypt_cert.j2
#    dest: /root/bin/create-{{provider}}-letsencrypt-cert
#    mode: u=rwx,g=rx,o=
#  become: true
#
#
#- copy:
#    dest: /tmp/letsencrypt.txta
#    content: >
#        certbot certonly --agree-tos --email {{ssl_account_email}}
#        --cert-name {{cert_name}}
#        --preferred-challenges dns-01 --non-interactive
#        --manual
#        --manual-auth-hook /root/bin/certbot-{{provider}}-dns-auth
#        --manual-cleanup-hook /root/bin/certbot-{{provider}}-dns-cleanup
#        {% for domain in domains -%} -d '{{domain}}' {% endfor %}
#        --test-cert --dry-run
#  become: true
#
#- command:
#    cmd: >
#        certbot certonly --agree-tos --email {{ssl_account_email}}
#        --cert-name {{cert_name}}
#        --preferred-challenges dns-01 --non-interactive
#        --manual
#        --manual-auth-hook /root/bin/certbot-{{provider}}-dns-auth
#        --manual-cleanup-hook /root/bin/certbot-{{provider}}-dns-cleanup
#        {% for domain in domains -%} -d '{{domain}}' {% endfor %}
#        --test-cert --dry-run
#    creates: /etc/letsencrypt/renewal/{{cert_name}}.conf
#  become: true
