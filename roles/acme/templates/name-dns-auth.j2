#!/usr/bin/env python3

import base64
import json
import os
from time import sleep
import urllib.request

API_USER = r"{{lookup('vars', provider + '_api_username')}}"
API_PASS = r"{{lookup('vars', provider + '_api_secret')}}"
API_HOST = r"https://api.name.com"
API_URL = r"{host}/v4/domains/{domain}/records"

CERTBOT_DOMAIN = os.environ['CERTBOT_DOMAIN']
CERTBOT_REMAINING_CHALLENGES = os.environ['CERTBOT_REMAINING_CHALLENGES']
CERTBOT_ALL_DOMAINS = os.environ['CERTBOT_ALL_DOMAINS']
CERTBOT_VALIDATION = os.environ['CERTBOT_VALIDATION']

SPLIT_DOMAIN = CERTBOT_DOMAIN.split('.')
SUBDOMAIN = SPLIT_DOMAIN[:-2] # keep this as list
ZONEID = '.'.join(SPLIT_DOMAIN[-2:])


data = {
    'host': '.'.join(('_acme-challenge', *SUBDOMAIN)),
    'type': 'TXT',
    'answer': CERTBOT_VALIDATION,
    'ttl': 300,
}


exit_code = -1

encoded_auth = base64.b64encode('{user}:{passwd}'.format(user=API_USER,
        passwd=API_PASS) \
        .encode('ascii'))\
        .decode('ascii')

request = urllib.request.Request(API_URL.format(host=API_HOST, domain=ZONEID),
        data=bytes(json.dumps(data), encoding='utf-8'))
request.add_header('content-type', 'application/json')
request.add_header('authorization', 'Basic {auth}'.format(auth=encoded_auth))

client = urllib.request.build_opener()
with client.open(request) as response:
    if response.status == 200:
        result_text = response.read().decode('utf-8')
        result = json.loads(result_text)

        # Per certbot documentation, print out record id that will be use by
        # the cleanup script.
        print(result['id'])
        exit_code = 0
        sleep(10)
    else:
        exit_code = response.status

exit(exit_code)
