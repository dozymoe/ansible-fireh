- name: check /root/.my.cnf
  stat:
    path: /root/.my.cnf
  register: has_my_cnf
  become: true


- block:
    - name: set root database password
      mysql_user:
        name: root
        password: "{{mysql_database_password}}"

    - name: update root user my.cnf
      blockinfile:
        dest: /root/.my.cnf
        mode: u=rw,g=,o=
        marker: "# {mark} root password"
        create: yes
        content: |
          [client]
          password={{mysql_database_password}}

  rescue:
    - debug:
        msg: Failed to setup root database password
  become: true
  when: has_my_cnf.stat.exists


- block:
    - name: stop mysql
      service:
        name: mysql
        state: stopped

    - name: set environment variables
      shell: systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"

    - name: start mysql
      service:
        name: mysql
        state: started

    - name: flush mysql privileges
      command: mysql -u root --execute="FLUSH PRIVILEGES"

    - name: reset root password
      command: >
        mysql -u root --execute="ALTER USER 'root'@'localhost'
        IDENTIFIED BY '{{mysql_database_password}}';"

    - name: stop mysql
      service:
        name: mysql
        state: stopped

    - name: unset environment variables
      shell: systemctl unset-environment MYSQLD_OPTS

    - name: start mysql
      service:
        name: mysql
        state: started

    - name: set root user my.cnf
      blockinfile:
        dest: /root/.my.cnf
        mode: u=rw,g=,o=
        marker: "# {mark} root password"
        create: yes
        content: |
          [client]
          password={{mysql_database_password}}

  rescue:
    - debug:
        msg: Failed to setup root database password
  become: true
  when: not has_my_cnf.stat.exists
