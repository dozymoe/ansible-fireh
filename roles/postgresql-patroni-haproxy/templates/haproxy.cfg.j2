global
    log /dev/log local0
    log /dev/log local1 notice
    maxconn 200
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/haproxy/{{ cert_archive_basedir }}/pki
    crt-base /etc/haproxy/{{ cert_archive_basedir }}/pki/issued

defaults
    log global
    mode tcp
    option tcplog
    option dontlognull
    timeout connect 5s
    timeout client 30m
    timeout server 30m
    timeout check 5s
    retries 2
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

#listen stats
#    mode http
#    option httplog
#    bind *:7000
#    stats enable
#    stats uri /
#    # stats auth haproxy:haproxy
#    # stats refresh 10s

listen primary
    mode tcp
    bind *:5002

    option httpchk
    http-check connect ssl port {{ patroni_api_port }} linger
    http-check send meth HEAD uri /primary
    http-check expect status 200

    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
{% for host in db_hosts %}
    server node{{ loop.index }} {{ host }}:{{ patroni_port }} maxconn 100 check ca-file ca.crt crt pair.c.{{ hostname }}.pem
{% endfor %}

listen standbys
    mode tcp
    bind *:5003
    balance roundrobin

    option httpchk
    http-check connect ssl port {{ patroni_api_port }} linger
    http-check send meth HEAD uri /read-only
    http-check expect status 200

    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
{% for host in db_hosts %}
    #server node{{ loop.index }} {{ host }}:{{ patroni_port }} maxconn 100 check ca-file ca.crt crt pair.c.{{ hostname }}.pem
{% endfor %}

#listen testssl
#    mode http
#    bind *:5000 ssl verify required ca-file ca.crt crt pair.s.{{ hostname }}.pem
#    default_backend backend_dummy
#
#backend backend_dummy
#    mode http
#    # http-response won't work here as the response is generated by HAP
#    #http-after-response set-header Access-Control-Allow-Origin "%[req.hdr(Origin)]"
#    http-after-response set-header Access-Control-Max-Age "31536000"
#    http-request return status 200 content-type "text/plain" string "Yellow" if TRUE
